apiVersion: v1
# Этот тип ссылается на том в нашей среде.
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-volume
  labels:
    app   : mysql
    owner : rulrike
spec:
  # Конфигурация тома
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app  : mysql
    owner: rulrike
spec:
# Replicas - это свойство объекта Spec развертывания, которое определяет, сколько подов мы хотим запустить.
  replicas: 1
  # Новые поды становятся готовыми или доступными (по крайней мере, через MinReadySeconds).
  minReadySeconds: 15
  # Тип указывает стратегию, используемую в этом развертывании при переходе от текущей версии к следующей.
  # Стратегия RollingUpdate обеспечивает нулевое время простоя при развертывании.
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # После завершения работы одного модуля у нас все еще будет работать один модуль, таким образом сохраняя доступность нашего приложения
      maxUnavailable: 1
      # Определяет максимальное количество модулей, добавляемых к развертыванию
      maxSurge: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-volume
      containers:
      - name           : mysql
        # Image - это образ контейнера, который мы хотим запустить в этом поде.
        image          : mysql_image
        # Отключаем возможность подтягивать image с dockerhub 
        imagePullPolicy: Never
        # Порт контейнера: порт, который прослушивает контейнер. Это всего лишь индикатор для читателя (отключение порта не ограничивает доступ).
        ports:
        - containerPort: 3306
        # Определяем хранилище
        volumeMounts   :
        - mountPath: "/var/lib/mysql"
          name     : mysql-persistent-storage
---
apiVersion: v1
# Kind: указывает тип ресурса Kubernetes, который мы хотим создать.
kind: Service
metadata:
  # Имя: определяет имя ресурса.
  name: mysql-service
  labels:
      app  : mysql
      owner: rulrike
# Spec - это объект, определяющий желаемое состояние ресурса.
spec:
  # Тип спецификации, мы выбираем ClusterIP, чтобы нельзя было подключиться извне
  type: ClusterIP
  selector:
    app: mysql
  # Port: указывает порт, через который служба получает запросы.
  # TargetPort: порт, на который перенаправляются входящие запросы.
  # Protocol определяет связь.
  ports:
  - name      : http-for-mysql
    protocol  : TCP
    port      : 3306
    targetPort: 3306